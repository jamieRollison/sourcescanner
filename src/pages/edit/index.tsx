import Head from "next/head";
import Navbar from "~/components/navbar";
import Footer from "~/components/footer";
import { signIn, useSession } from "next-auth/react";
import { useEffect, useState } from "react";
import { api } from "~/utils/api";
import type { Annotation } from "~/utils/types";

export default function Edit() {
  const { status } = useSession();
  const annotate = api.router.annotate.useMutation();

  useEffect(() => {
    if (status == "unauthenticated") {
      void signIn("google", { callbackUrl: "/edit" });
    }
  }, [status]);

  const [text, setText] = useState("");
  const [annotations, setAnnotations] = useState<Annotation[]>([]);

  useEffect(() => {
    console.log(annotations);
  }, [annotations]);

  return (
    status == "authenticated" && (
      <>
        <Head>
          <title>Scan your text</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="flex min-h-screen flex-col bg-dark">
          <Navbar />
          <section className="flex-1">
            <h1 className="mb-4 ml-10 mt-6 text-white">
              Get started with Source Scanner.
            </h1>
            <div className="h-[60vh]">
              <div className="xs:flex-wrap mx-10 flex gap-8 sm:flex-grow">
                <div className="flex w-1/2 flex-col">
                  <form className="">
                    <textarea
                      onChange={(e) => setText(e.target.value)}
                      className="h-[60vh] w-full resize-none rounded-lg border-2 bg-secondary p-6 text-white focus-within:border-white focus-visible:border-white"
                      placeholder="Enter your text here"
                    ></textarea>
                  </form>

                  <div className="flex justify-end">
                    <button
                      className="mt-2 rounded-lg bg-primary p-4 text-white "
                      onClick={() => {
                        annotate
                          .mutateAsync(text)
                          .then((res) => {
                            setAnnotations(res);
                            setAnnotations(annotations);
                          })
                          .catch((err) => {
                            console.log(err);
                          });
                      }}
                    >
                      Scan
                    </button>
                  </div>
                </div>
                <div className=" h-[60vh] w-1/2 rounded-lg bg-white px-10 pt-6">
                  <p className="overflow-auto">text</p>
                </div>
              </div>
            </div>
          </section>
          <Footer />
        </main>
      </>
    )
  );
}
